type: edu
files:
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.16)

    project(global-lesson1-szamologep)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/szamologep.c)

    # Files from `./test` directory
    set(TEST
            test/test.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})

    # Running tests
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    configure_test_target(${PROJECT_NAME}-test ${SRC} ${TEST})
  learner_created: false
- name: src/szamologep.c
  visible: true
  placeholders:
  - offset: 180
    length: 15
    placeholder_text: // másik érték beolvasása
    initial_state:
      length: 25
      offset: 180
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: scanf("%d", &b);
  - offset: 208
    length: 9
    placeholder_text: /* eredmeny kiirasa */
    initial_state:
      length: 22
      offset: 218
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: '"%d", a+b'
  text: |-
    #include <stdio.h>

    int main() {
        int a;
        int b; // változók létrehozása: akar egy sorban is letrehozhatjuk oket, de lehet tobb sorban is egyesevel

        scanf("%d", &a);
        // másik érték beolvasása

        printf(/* eredmeny kiirasa */);
        return 0;
    }
  learner_created: false
- name: test/test.cpp
  visible: false
  text: |-
    #include <gtest/gtest.h>

    #define main main_0
    #include "../src/szamologep.c"
    #undef main

    #include "../../tools.cpp"

    TEST(Test, 01) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int eredmeny;
        char str[100];
        IO("5 7", main_0(), str);
        sscanf(str, "%d", &eredmeny);
        ASSERT_EQ(eredmeny, 12);
    }

    TEST(Test, 02) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int eredmeny;
        char str[100];

        IO("-4 13", main_0(), str)
        sscanf(str, "%d", &eredmeny);
        ASSERT_EQ(eredmeny, 9);
    }

    TEST(Test, 03) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        int eredmeny;
        char str[100];

        IO("-5 -7", main_0(), str)
        sscanf(str, "%d", &eredmeny);
        ASSERT_EQ(eredmeny, -12);
    }

    TEST(Test, visszateresi_ertek) { // NOLINT(cert-err58-cpp) suppress for initialization static field in generated class
        char str[100];

        IO("5 5", int eredmeny = main_0(), str)
        ASSERT_EQ(eredmeny, 0);
    }
  learner_created: false
status: Solved
record: -1
solution_hidden: true
